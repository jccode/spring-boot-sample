<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.jccode.springbootrestintegrateddemo.repo.OrderDetailMapper">
  <resultMap id="BaseResultMap" type="com.github.jccode.springbootrestintegrateddemo.model.OrderDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="d_ID" jdbcType="INTEGER" property="id" />
    <result column="d_ORDERS_ID" jdbcType="INTEGER" property="ordersId" />
    <result column="d_PRODUCT_ID" jdbcType="INTEGER" property="productId" />
    <result column="d_AMOUNT" jdbcType="INTEGER" property="amount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    d.ID as d_ID, d.ORDERS_ID as d_ORDERS_ID, d.PRODUCT_ID as d_PRODUCT_ID, d.AMOUNT as d_AMOUNT
  </sql>
  <select id="selectByExample" parameterType="com.github.jccode.springbootrestintegrateddemo.model.OrderDetailCriteria" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ORDER_DETAIL d
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from ORDER_DETAIL d
    where d.ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ORDER_DETAIL
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.github.jccode.springbootrestintegrateddemo.model.OrderDetailCriteria">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ORDER_DETAIL d
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.github.jccode.springbootrestintegrateddemo.model.OrderDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ORDER_DETAIL (ID, ORDERS_ID, PRODUCT_ID, 
      AMOUNT)
    values (#{id,jdbcType=INTEGER}, #{ordersId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{amount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.github.jccode.springbootrestintegrateddemo.model.OrderDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ORDER_DETAIL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="ordersId != null">
        ORDERS_ID,
      </if>
      <if test="productId != null">
        PRODUCT_ID,
      </if>
      <if test="amount != null">
        AMOUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ordersId != null">
        #{ordersId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.jccode.springbootrestintegrateddemo.model.OrderDetailCriteria" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from ORDER_DETAIL d
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ORDER_DETAIL d
    <set>
      <if test="record.id != null">
        d.ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ordersId != null">
        d.ORDERS_ID = #{record.ordersId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        d.PRODUCT_ID = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        d.AMOUNT = #{record.amount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ORDER_DETAIL d
    set d.ID = #{record.id,jdbcType=INTEGER},
      d.ORDERS_ID = #{record.ordersId,jdbcType=INTEGER},
      d.PRODUCT_ID = #{record.productId,jdbcType=INTEGER},
      d.AMOUNT = #{record.amount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.jccode.springbootrestintegrateddemo.model.OrderDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ORDER_DETAIL
    <set>
      <if test="ordersId != null">
        ORDERS_ID = #{ordersId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        PRODUCT_ID = #{productId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        AMOUNT = #{amount,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.jccode.springbootrestintegrateddemo.model.OrderDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ORDER_DETAIL
    set ORDERS_ID = #{ordersId,jdbcType=INTEGER},
      PRODUCT_ID = #{productId,jdbcType=INTEGER},
      AMOUNT = #{amount,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.github.jccode.springbootrestintegrateddemo.model.OrderDetailCriteria" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ORDER_DETAIL d
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>


  <!-- Custom SQLs -->

  <resultMap extends="BaseResultMap" id="OrderDetailExt" type="com.github.jccode.springbootrestintegrateddemo.model.OrderDetailExt">
    <association column="product_id" javaType="com.github.jccode.springbootrestintegrateddemo.model.Product" property="product"
                 resultMap="com.github.jccode.springbootrestintegrateddemo.repo.ProductMapper.BaseResultMap" />
  </resultMap>

</mapper>