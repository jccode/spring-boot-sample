# Variables

:client_id := (setq client_id "webapp")
:client_secret := (setq client_secret "000000")

:username := (setq username "admin")
:password := (setq password "admin")
# :username := (setq username "user")
# :password := (setq password "71b6831a-897e-44d1-8f49-b37584d296c7")

:access_token := (setq access_token "96870950-07c2-4c1a-9bf9-28b70dc70c60")

:auth_basic := (format "Authorization: Basic %s" (base64-encode-string (format "%s:%s" username password) t))
:auth_bearer := (format "Authorization: Bearer %s" access_token)

# -------------------- Access token --------------------

# grant_type: client credential
POST http://127.0.0.1:8080/uaa/oauth/token?grant_type=client_credentials&client_id=:client_id&client_secret=:client_secret&scope=read

# grant_type: password
POST http://127.0.0.1:8080/uaa/oauth/token?grant_type=password&username=:username&password=:password&client_id=:client_id&client_secret=:client_secret&scope=all

# ---------- Gateway test ----------

# user info
GET http://127.0.0.1:8080/backend/app/me
:auth_bearer

# backend service : api-gateway
GET http://127.0.0.1:8080/backend/app/guest
:auth_bearer

# user
GET http://127.0.0.1:8080/backend/app/user
:auth_bearer

# admin
GET http://127.0.0.1:8080/backend/app/admin
:auth_bearer

# read book
GET http://127.0.0.1:8080/backend/book/list
:auth_bearer

# write book
GET http://127.0.0.1:8080/backend/book/write
:auth_bearer

# ---------- direct test ----------

# backend service : direct
GET http://127.0.0.1:8081/app/guest
:auth_bearer
